<Window x:Class="SqlOverExcelUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SqlOverExcelUI"
        mc:Ignorable="d"
        xmlns:f="clr-namespace:SqlOverExcelUI.Functions"
        WindowStartupLocation="CenterScreen" 
        Style="{StaticResource ResourceKey=Window}"
        Title="{StaticResource ResourceKey=resMainWindow}" Height="665" Width="900" MinWidth="640" MinHeight="600">
    <Grid Margin="0,0,0,10">

        <Menu VerticalAlignment="Top">
            <MenuItem Header="About" Command="{Binding Path=AboutCommand}"/>
            <MenuItem Header="Save" Command="{Binding Path=SaveCommand}"/>
            <MenuItem Header="Load" Command="{Binding Path=LoadCommand}"/>
        </Menu>

        <!-- -->
        <Label Style="{StaticResource ResourceKey=TitleRegular}" Content="{StaticResource ResourceKey=resExcelFile}" Margin="10,26,10,0" />
        <TextBox Margin="10,57,167,0" Style="{StaticResource ResourceKey=TextBoxRegular}" Text="{Binding Path=Model.ExcelFileName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxLength="255"/>
        <Button Content="{StaticResource ResourceKey=resSelectExcelFile}" Margin="0,57,10,0" Style="{StaticResource ResourceKey=RegularButton}" HorizontalAlignment="Right" Command="{Binding Path=SelectFileCommand}" />

        <!-- -->
        <Label Style="{StaticResource ResourceKey=TitleRegular}" Content="{StaticResource ResourceKey=resWorksheetInfo}" Margin="10,85,10,0" />
        <DataGrid x:Name="dgMain" Margin="10,116,165,0" Style="{StaticResource ResourceKey=DataGridMain}" ItemsSource="{Binding Path=Model.WorksheetItems}" MinHeight="50" Height="150" VerticalAlignment="Top">
            <DataGrid.CellStyle>
                <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource ResourceKey=DataGridMainCell}" />
            </DataGrid.CellStyle>

            <DataGrid.Columns >
                <DataGridTextColumn Header="{StaticResource ResourceKey=resWorksheetName}" ElementStyle="{StaticResource ResourceKey=TextBlockTrimmed}" Binding="{Binding Path=WorksheetName}" MinWidth="75" Width="5*"/>
                <DataGridTextColumn Header="{StaticResource ResourceKey=resWorksheetNameForQuery}" ElementStyle="{StaticResource ResourceKey=TextBlockTrimmed}" Binding="{Binding Path=WorksheetNameForQuery}" MinWidth="75" Width="5*"/>

                <DataGridTextColumn Header="{StaticResource ResourceKey=resMaxRows}" ElementStyle="{StaticResource ResourceKey=TextBlockTrimmedCentered}" HeaderStyle="{StaticResource ResourceKey=HeaderStyleCentered}" Binding="{Binding Path=RowCount}" MinWidth="75" Width="1*"/>

                <DataGridTextColumn Header="{StaticResource ResourceKey=resMaxCols}" ElementStyle="{StaticResource ResourceKey=TextBlockTrimmedCentered}" HeaderStyle="{StaticResource ResourceKey=HeaderStyleCentered}" Binding="{Binding Path=ColCount}" MinWidth="75" Width="1*"/>
            </DataGrid.Columns>
        </DataGrid>
        <Button Content="{StaticResource ResourceKey=resOpenExcelFile}" Margin="0,116,10,0" Style="{StaticResource ResourceKey=RegularButton}" HorizontalAlignment="Right" Command="{Binding Path=RunAnalyticsCommand}" />
        <Button Content="{StaticResource ResourceKey=resUseTableName}" Margin="0,144,10,0" Style="{StaticResource ResourceKey=RegularButton}" HorizontalAlignment="Right" Command="{Binding Path=UseTableNameCommand}" CommandParameter="{Binding ElementName=dgMain, Path=SelectedItems}" />

        <!-- -->
        <Label Style="{StaticResource ResourceKey=TitleRegular}" Background="AntiqueWhite" Content="{StaticResource ResourceKey=resSqlQueryToRun}" Margin="10,271,10,0" />
        <TextBox VerticalScrollBarVisibility="Visible" Height="100" Margin="10,302,165,0" TextWrapping="Wrap" AcceptsReturn="True" AcceptsTab="True" Text="{Binding Path=Model.SqlQuery, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" MaxLines="255">
            <TextBox.ToolTip>
                <TextBlock>
                    SQL Query samples:
                    <LineBreak/>
                    1) select count(field1) as e1 from [Worksheet1$]
                    <LineBreak/>
                    2) select count(field1) as e1, max(field2) as e2, min(field3) as e3 from [Worksheet1$]
                    <LineBreak/>
                    3) SELECT [Table1$].[ID], [Table2$].[ValueAddon], [Table1$].[TextValue] FROM [Table1$] LEFT JOIN[Table2$] ON[Table1$].[IKeyID] = [Table2$].[ID]
                    <LineBreak/>
                    4) SELECT [Table1$].ID, [Table2$].ValueAddon, [Table1$].TextValue FROM [Table1$] LEFT JOIN[Table2$] ON[Table1$].IKeyID = [Table2$].ID
                    <LineBreak/>
                    <LineBreak/>
                    Main tips:
                    <LineBreak/>
                    Table name must be in square brasket []
                    <LineBreak/>
                    Table name must end with sign $
                </TextBlock>
            </TextBox.ToolTip>
        </TextBox>
        <Button IsEnabled="{Binding Path=Text.Length, ElementName=txtQuery}" Content="{StaticResource ResourceKey=resRunSqlQuery}" Margin="0,302,10,0" Style="{StaticResource ResourceKey=RegularButton}" Command="{Binding RunSqlQueryCommand}" Width="150" HorizontalAlignment="Right" />
        <CheckBox Content="{StaticResource ResourceKey=resHDR}" Margin="0,330,10,0" VerticalAlignment="Top" IsChecked="{Binding Path=Model.HDR, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Right" Width="150"/>


        <Label Style="{StaticResource ResourceKey=LabelRegular}" Content="{StaticResource ResourceKey=resTextForSearch}" HorizontalAlignment="Left" Margin="10,436,0,0" VerticalAlignment="Top" TextOptions.TextFormattingMode="Display"/>
        <TextBox TextChanged="TextBox_TextChanged" x:Name="txtSearch" Text="{Binding Path=Model.TextForSearch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MaxLength="50" Margin="160,436,165,0" Style="{StaticResource ResourceKey=TextBoxRegular}"/>
        <Button IsEnabled="{Binding Path=Text.Length, ElementName=txtSearch}" Content="{StaticResource ResourceKey=resResetSearch}" Margin="0,436,10,0" Style="{StaticResource ResourceKey=RegularButton}" Width="150" HorizontalAlignment="Right" Command="{Binding Path=ResetSearchCommand}"/>

        <!-- -->
        <Label Style="{StaticResource ResourceKey=TitleRegular}" Content="{StaticResource ResourceKey=resSqlQueryResult}" Margin="10,407,10,0" />
        <DataGrid f:DataGridTextSearch.SearchValue="{Binding ElementName=txtSearch, Path=Text, UpdateSourceTrigger=PropertyChanged}"  x:Name="dgResult" SelectionMode="Extended" Margin="10,464,165,0" Style="{StaticResource ResourceKey=DataGridMain}" ItemsSource="{Binding Path=Model.QueryResult}" AutoGenerateColumns="True">
            <DataGrid.Resources>
                <f:SearchValueConverter x:Key="SearchValueConverter" />
                <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource ResourceKey=DataGridCellTooltip}">
                    <Setter Property="f:DataGridTextSearch.IsTextMatch">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource SearchValueConverter}">
                                <Binding RelativeSource="{RelativeSource Self}" Path="Content.Text" />
                                <Binding RelativeSource="{RelativeSource Self}" Path="(f:DataGridTextSearch.SearchValue)" />
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="f:DataGridTextSearch.IsTextMatch" Value="True">
                            <Setter Property="Background" Value="LightGreen" />
                            <Setter Property="Foreground" Value="Red" />
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>
        </DataGrid>
        <Button Content="{StaticResource ResourceKey=resSaveResult}" Margin="0,464,10,0" Style="{StaticResource ResourceKey=RegularButton}" Command="{Binding Path=SaveQueryResultCommand}" Width="150" HorizontalAlignment="Right" />

    </Grid>
</Window>
